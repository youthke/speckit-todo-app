openapi: 3.0.3
info:
  title: Todo App Task Management API
  description: DDD-based Task Management API for Todo Application
  version: 2.0.0
  contact:
    name: Todo App Team

servers:
  - url: http://localhost:8080/api/v1
    description: Development server

paths:
  /tasks:
    get:
      summary: Get all tasks for authenticated user
      description: Retrieve all tasks belonging to the authenticated user with optional filtering
      parameters:
        - name: status
          in: query
          description: Filter tasks by status
          required: false
          schema:
            type: string
            enum: [pending, completed, archived]
        - name: priority
          in: query
          description: Filter tasks by priority
          required: false
          schema:
            type: string
            enum: [low, medium, high]
      responses:
        '200':
          description: Successfully retrieved tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  count:
                    type: integer
                    description: Total number of tasks
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Create a new task
      description: Create a new task for the authenticated user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tasks/{id}:
    get:
      summary: Get a specific task
      description: Retrieve a specific task by ID for the authenticated user
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully retrieved task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update a task
      description: Update an existing task for the authenticated user
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a task
      description: Delete a specific task for the authenticated user
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique task identifier
        title:
          type: string
          description: Task title
          maxLength: 500
        description:
          type: string
          description: Task description
          maxLength: 2000
        status:
          type: string
          enum: [pending, completed, archived]
          description: Current task status
        priority:
          type: string
          enum: [low, medium, high]
          description: Task priority level
        user_id:
          type: integer
          format: int64
          description: ID of the user who owns this task
        created_at:
          type: string
          format: date-time
          description: Task creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
      required:
        - id
        - title
        - status
        - priority
        - user_id
        - created_at
        - updated_at

    CreateTaskRequest:
      type: object
      properties:
        title:
          type: string
          description: Task title
          maxLength: 500
        description:
          type: string
          description: Task description
          maxLength: 2000
        priority:
          type: string
          enum: [low, medium, high]
          description: Task priority level
          default: medium
      required:
        - title

    UpdateTaskRequest:
      type: object
      properties:
        title:
          type: string
          description: New task title
          maxLength: 500
        description:
          type: string
          description: New task description
          maxLength: 2000
        status:
          type: string
          enum: [pending, completed, archived]
          description: New task status
        priority:
          type: string
          enum: [low, medium, high]
          description: New task priority

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
      required:
        - error
        - message